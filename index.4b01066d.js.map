{"mappings":"YAAQ,IAAMA,EAAoB,SAACC,GAe/B,OAbgBA,EAASC,KAAI,SAACC,GAE3B,MAAO,oCAGkBC,OADZD,EAAKE,WAAW,gFAEHD,OADDD,EAAKG,UAAU,0CACFF,OAAZD,EAAKI,OAAO,gC,IAKvCC,KAAK,G,ECVLC,EAAmBC,SAASC,cAAc,sBAC1CC,EAAiBF,SAASC,cAAc,uBACxCE,EAAmBH,SAASC,cAAc,sBAC1CG,EAAoBJ,SAASC,cAAc,uBCFrCI,MAAO,uDAAsDC,MAAK,SAAAC,GACpE,IAAIA,EAASC,GACT,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,M,IDCvBL,MAAK,SAAAM,GACJA,EAAKpB,KAAI,SAAAD,GAGP,OAFAsB,QAAQC,IAAIvB,GAEe,sCAAvBA,EAASK,UACHG,EAAiBgB,WAAazB,EAAiBC,EAASyB,OAEzC,yCAAvBzB,EAASK,UAEDM,EAAea,WAAazB,EAAiBC,EAASyB,OAC9B,sBAAvBzB,EAASK,UACVO,EAAiBY,WAAazB,EAAiBC,EAASyB,OAChC,yBAAvBzB,EAASK,UACVQ,EAAkBW,WAAazB,EACrCC,EAASyB,YAFN,C,OAOVC,OAAM,SAAAC,GACLL,QAAQC,IAAII,E","sources":["src/js/home-bs/markupBook.js","src/js/home-bs/home-bs.js","src/js/home-bs/fetchBooks.js"],"sourcesContent":["export  const createBookMarkup =  (category)=> {\n\n    const markup =  category.map((book)=> {   \n   \n       return `\n       <li>\n       <img  src=\"${book.book_image}\"  loading=\"lazy\" width=\"180\" height=\"256\"/>\n       <h3 class=\"book-title\">${book.list_name}</h3>\n       <p class=\"book-author\"> ${book.author}\n        </p>\n        </li>`\n       \n    \n   }).join(\"\");\n   \n    return markup;\n   \n   }","import fetchBooks from './fetchBooks.js';\nimport { createBookMarkup } from './markupBook.js';\n\nconst booksListFirstEl = document.querySelector('.books-list__first');\nconst booksListSecEl = document.querySelector('.books-list__second');\nconst booksListThirdEl = document.querySelector('.books-list__third');\nconst booksListFourthEl = document.querySelector('.books-list__fourth');\n\nfetchBooks()\n  .then(data => {\n    data.map(category => {\n      console.log(category);\n\n      if (category.list_name === 'Combined Print and E-Book Fiction') {\n        return (booksListFirstEl.innerHTML += createBookMarkup(category.books));\n      } else if (\n        category.list_name === 'Combined Print and E-Book Nonfiction'\n      ) {\n        return (booksListSecEl.innerHTML += createBookMarkup(category.books));\n      } else if (category.list_name === 'Hardcover Fiction') {\n        return (booksListThirdEl.innerHTML += createBookMarkup(category.books));\n      } else if (category.list_name === 'Hardcover Nonfiction') {\n        return (booksListFourthEl.innerHTML += createBookMarkup(\n          category.books\n        ));\n      }\n    });\n  })\n  .catch(err => {\n    console.log(err);\n  });\n","\nexport default function fetchBooks(name) {\n\n\n    return  fetch(`https://books-backend.p.goit.global/books/top-books`).then(response =>{\n          if(!response.ok) {\n              throw new Error(response.status)\n              }\n          return response.json();\n      })}\n  \n   "],"names":["$71b2a5163445dc17$export$fc330cc8afb2a391","category","map","book","concat","book_image","list_name","author","join","$ed1c5cd83a4972f1$var$booksListFirstEl","document","querySelector","$ed1c5cd83a4972f1$var$booksListSecEl","$ed1c5cd83a4972f1$var$booksListThirdEl","$ed1c5cd83a4972f1$var$booksListFourthEl","fetch","then","response","ok","Error","status","json","data","console","log","innerHTML","books","catch","err"],"version":3,"file":"index.4b01066d.js.map"}