{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCCAD,EAAAC,EAAA,SACA,MAAMC,yBAAEC,EAAwBC,2BAAEC,EAA0BC,0BAAEC,EAAyBC,YAAEC,EAAWC,eAAEC,EAAcC,WAAEC,EAAUC,UAAEC,IAAc,EAAAf,EAAAgB,WAK1IC,EACJC,KAAKC,MAAMC,aAAaC,QAFQ,sBAE+B,GAQjE,IAAIC,EAAaC,KAAKC,KAAKP,EAAaQ,OAFvB,GAIbC,EAAc,EAGdC,EAPa,GAOCD,EAAc,GAE5BE,EAAWD,EATE,EAejBE,EAJkBZ,EAAaa,MAAMH,EAAYC,IAOjD,IAAK,IAAIG,EAAI,EAAGA,GAAKT,EAAYS,IAAK,CAKlC,MAAMC,EAAaD,EAEbE,EAASC,SAASC,cAAc,UAEtCF,EAAOG,UAAUC,IAAI,oBACrBJ,EAAOG,UAAUC,IAAI,2BAErBJ,EAAOK,YAAcP,EAErBQ,EAA0BlC,GAC1BkC,EAA0BhC,GAG1B0B,EAAOO,iBAAiB,SAAS,KAC/Bd,EAAcM,EACdS,QAAQC,IAAIhB,GAEZiB,IACAC,IACAC,EAAwBpC,GACxBoC,EAAwB9B,EAAU,IAGpCZ,EAAyB2C,YAAYb,E,CAwCzC,SAASU,IACPI,MAAMC,UAAY,E,CAUpB,SAASJ,IACPf,GANAF,EA5Fe,GA4FDD,EAAc,GAC5BE,EAAWD,EA7FI,EA8FRV,EAAaa,MAAMH,EAAYC,I,CAOxC,SAASiB,EAAwBI,GAC/BA,EAAQC,UAAW,C,CAGrB,SAASC,EAAqBF,GAC5BA,EAAQC,UAAW,C,CAGrB,SAASX,EAA0BU,GACjCA,EAAQG,MAAMC,QAAU,M,CAGnB,SAASC,EAA0BL,GACxCA,EAAQG,MAAMC,QAAU,M,CAhE1B1C,EAAe6B,iBAAiB,SAAS,KACnCd,EAAc,IAChBA,IACAiB,IACAC,IACAC,EAAwB9B,G,IAI5BF,EAAW2B,iBAAiB,SAAS,KAC/Bd,EAAcJ,IAChBI,IACAiB,IACAC,IACAC,EAAwBpC,G,IAI5BA,EAAY+B,iBAAiB,SAAS,KACpCd,EAAc,EACdiB,IACAC,IACAO,EAAqB1C,GACrBoC,EAAwB9B,EAAU,IAIpCA,EAAUyB,iBAAiB,SAAS,KAClCd,EAAcJ,EACdqB,IACAC,IACAO,EAAqBpC,GACrB8B,EAAwBpC,EAAY,ID1FtC,MAAMsC,MAAEQ,EAAKrD,yBAAEsD,EAAwBpD,2BAAEqD,EAA0BnD,0BAAEoD,IAA8B,EAAA1D,EAAAgB,WAOvF,SAAKa,EAAa8B,GAC5B,OAAOA,EAAMC,KAAI,EAACC,MAAEA,EAAKC,OAAEA,EAAMC,YAAEA,EAAWC,UAAEA,KACrC,+OAU0BH,kDACEG,sFAIGD,iFAILD,iUAU8BD,8JAMhEI,KAAK,G,CAGD,MAAMC,EACbhD,KAAKC,MAAMC,aAAaC,QA9CQ,sBA8C+B,GAI1D6C,EAAazC,OAKlB8B,EAAMY,mBAAmB,YAAatC,EAAaqC,IAJjDX,EAAMP,UACJ,8HASWd,SAASkC,cAAc,mBAE/B5B,iBAAiB,SAAS6B,IACjC,GAAIA,EAAMC,OAAOlC,UAAUmC,SAAS,sBAAuB,CACzD,MAAMC,EAAeH,EAAMC,OAAOG,aAAa,kBAEzCC,EAAYR,EAAaS,WAC7BC,GAAiBA,EAAcf,QAAUW,IAW3C,GARAN,EAAaW,OAAOH,EAAW,GAEftD,aAAH0D,QAzEiB,mBA2E5B5D,KAAK6D,UAAUb,IAGjBX,EAAMP,UAAYnB,EAAaqC,IAC1BA,EAAazC,OAQhB,OANA6B,EAA0BG,GAC1BH,EAA0BI,GAC1BF,EAAyBR,UAAY,QAErCO,EAAMP,UACJ,8H","sources":["src/js/shopping-list.js","src/js/paginations.js"],"sourcesContent":["'use strict';\n// ! Стас виніс твою змінну divEl до загального файлу refs.js для зручності, так як зможе у подальшому деструктуризувати її у своєму файлі і використовувати у своїх функціях\n// const divEl = document.querySelector('.shopping__list');\nimport getRefs from './refs';\nimport {activDisplayNoneOnElement} from './paginations';\n\nconst { divEl, paginationContainerPages, paginationContainerBackBtn, paginationContainerEndBtn } = getRefs();\n\nconst SHOPPING_LIST_STORAGE_KEY = 'storage-of-books'; // ключ\n\n// Рендер розмітки книг, які збережені у LS\n//!  Стас тут змінив функцію щоб вона приймала масив для рендеру, тому що при перемиканні сторінок, динамічно змінюється частина масиву, який у подальшому буде рендеритись\n\n export function renderMarkUp(array) {\n  return array.map(({ title, author, description, list_name }) => {\n      return `<article class=\"shopping__card\">\n  <div class=\"div1\">\n    <img\n      class=\"shopping__card-img\"\n      src=\"https://picsum.photos/116/165\"\n      alt=\"\"\n    />\n  </div>\n\n  <div class=\"div2\">\n    <h3 class=\"shopping__card-title\">${title}</h3>\n    <p class=\"shopping__card-category\">${list_name}</p>\n  </div>\n\n  <div class=\"div3\">\n    <p class=\"shopping__card-description\">${description}</p>\n  </div>\n\n  <div class=\"div4\">\n    <p class=\"shopping__card-author\">${author}</p>\n  </div>\n\n  <div class=\"div5\">\n    <ul class=\"shopping__card-shoplist\">\n      <li class=\"store\"><a href=\"\">St1</a></li>\n      <li class=\"store\"><a href=\"\">St2</a></li>\n      <li class=\"store\"><a href=\"\">St3</a></li>\n    </ul>\n  </div>\n  <button class=\"shopping__card-btn\" type=\"button\" data-book-name=\"${title}\"><svg class=\"icon-trash\" width=\"16\" height=\"16\"><use href=\"./src/images/symbol-defs.svg#icon-chevron\"></use></svg>\n  </button>\n</article>\n\n        `;\n    })\n    .join('');\n};\n\n  export const shoppingList =\n  JSON.parse(localStorage.getItem(SHOPPING_LIST_STORAGE_KEY)) || [];\n\n\nfunction isEmpty() {\n  if (!shoppingList.length) {\n    divEl.innerHTML =\n      '<div class=\"is-empty__wrapper\"><p class=\"is-empty__info\">This page is empty, add some books and proceed to order.</p></div>';\n    return;\n  }\n  divEl.insertAdjacentHTML('beforeend', renderMarkUp(shoppingList));\n}\n\nisEmpty();\n\n// Видалення книги з корзини при натиску на кнопку\nconst parentEl = document.querySelector('.shopping__list');\n\nparentEl.addEventListener('click', event => {\n  if (event.target.classList.contains('shopping__card-btn')) {\n    const dataBookName = event.target.getAttribute('data-book-name');\n\n    const bookIndex = shoppingList.findIndex(\n      bookInStorage => bookInStorage.title === dataBookName\n    );\n\n    shoppingList.splice(bookIndex, 1);\n    // Зберігаємо зміни в LocalStorage\n    localStorage.setItem(\n      SHOPPING_LIST_STORAGE_KEY,\n      JSON.stringify(shoppingList)\n    );\n\n    divEl.innerHTML = renderMarkUp(shoppingList);\n    if (!shoppingList.length) {\n      // ! Ця частина коду проводить видалення розмітки кнопок пагінації\n      activDisplayNoneOnElement(paginationContainerBackBtn);\n      activDisplayNoneOnElement(paginationContainerEndBtn);\n      paginationContainerPages.innerHTML = \"\";\n\n      divEl.innerHTML =\n        '<div class=\"is-empty__wrapper\"><p class=\"is-empty__info\">This page is empty, add some books and proceed to order.</p></div>';\n      return;\n    }\n  }\n});\n\n// --------------------------------------------------/////\n\n// чорновик\n\n// const bookTitleEl = document.getElementById('title');\n// const bookAuthorEl = document.getElementById('author');\n// const bookDescriptionEl = document.getElementById('description');\n// const bookListNameEl = document.getElementById('list_name');\n// const bookImageEl = document.getElementById('book_image').getAttribute('src');\n// // const bookAmazonUrl = document\n// //   .getElementById('shop_Amazon')\n// //   .getAttribute('href');\n// // const bookAppleUrl = document\n// .getElementById('apple_Books')\n// .getAttribute('href');\n// // const bookShopUrl = document.getElementById('bookshop').getAttribute('href');\n\n// const book = {\n//   title: bookTitleEl.textContent,\n//   author: bookAuthorEl.textContent,\n//   description: bookDescriptionEl.textContent,\n//   list_name: bookListNameEl.textContent,\n//   //   book_image: bookImageEl,\n//   //   buy_links: [\n//   //     {\n//   //       amazon: bookAmazonUrl,\n//   //       appleBooks: bookAppleUrl,\n//   //       bookShop: bookShopUrl,\n//   //     },\n//   //   ],\n// };\n// console.log(book);\n\n// // Отримуємо корзину товарів з LocalStorage або створюємо нову, якщо вона ще не існує\n// const shoppingList =\n//   JSON.parse(localStorage.getItem(SHOPPING_LIST_STORAGE_KEY)) || [];\n// console.log(shoppingList);\n\n// // Функція для додавання товару у корзину\n// function addToStorage(book) {\n//   // Додаємо товар до корзини\n//   shoppingList.push(book);\n//   // Зберігаємо зміни в LocalStorage\n//   localStorage.setItem(SHOPPING_LIST_STORAGE_KEY, JSON.stringify(shoppingList));\n// }\n\n\n/* paginations-slider for rendering books */\n// const paginationsSlider = document.querySelector(\".paginations-slider\");\n\n// container for created buttons paginations\n// const paginationContainerPages = document.querySelector(\".paginations__container-pages\");\n// const paginationContainerBackBtn = document.querySelector(\".paginations__container-back\");\n// const paginationContainerEndBtn = document.querySelector(\".paginations__container-end\");\n\n// buttons paginations\n// const startButton = document.querySelector(\"button[name='startButton']\");\n// const previousButton = document.querySelector(\"button[name='previousButton']\");\n// const nextButton = document.querySelector(\"button[name='nextButton']\");\n// const endButton = document.querySelector(\"button[name='endButton']\");","\nimport getRefs from './refs';\nconst { paginationContainerPages, paginationContainerBackBtn, paginationContainerEndBtn, startButton, previousButton, nextButton, endButton } = getRefs();\n\nimport { renderMarkUp } from './shopping-list'; \n// // !скопіював від юри - треба видалити\nconst SHOPPING_LIST_STORAGE_KEY = 'storage-of-books'; // ключ\nconst shoppingList =\n  JSON.parse(localStorage.getItem(SHOPPING_LIST_STORAGE_KEY)) || [];\n\n// !=======================================\n\n// ! ====== It`s my part working code on shoping list page =========\n// number of books per page in shoping list\nconst pageSize = 3;\n// all pages shoping list\nlet totalPages = Math.ceil(shoppingList.length / pageSize);\n// current page, (changing after click on button paginations)\nlet currentPage = 1;\n// console.log(currentPage);\n// start index for slice method\nlet startIndex = (currentPage - 1) * pageSize;\n// end index for slice method\nlet endIndex = startIndex + pageSize;\n// slicing an array of objects to create a single page\nlet itemsOnPage = shoppingList.slice(startIndex, endIndex);\n// console.log(itemsOnPage);\n\n// creating books on the page\nrenderMarkUp(itemsOnPage);\n\n// creating buttons paginations if shoping list has more three books\nfor (let i = 1; i <= totalPages; i++) {\n  //   if (shoppingList.length <= 3) {\n  //     return;\n  // };\n\n    const pageNumber = i;\n    // creating button paginations\n    const button = document.createElement('button');\n    // creating class button\n    button.classList.add(\"paginations__btn\");\n    button.classList.add(\"paginations__btn--pages\");\n    // creating number button\n    button.textContent = i;\n    \n    activDisplayFlexOnElement(paginationContainerBackBtn);\n    activDisplayFlexOnElement(paginationContainerEndBtn);\n    \n    // event for rendering book after click on button\n    button.addEventListener('click', () => {\n      currentPage = pageNumber;\n      console.log(currentPage)\n    // delete markup books before creating new murkup\n      deleteMurkup();\n      createNewBooks();\n      removeDisableforElement(startButton);\n      removeDisableforElement(endButton);\n    });\n    // add button after cteated\n    paginationContainerPages.appendChild(button);\n};\n\n// handler for previous Button\npreviousButton.addEventListener('click', () => {\n  if (currentPage > 1) {\n    currentPage--;\n    deleteMurkup();\n    createNewBooks();\n    removeDisableforElement(endButton);\n  }\n});\n// handler for next Button\nnextButton.addEventListener('click', () => {\n  if (currentPage < totalPages) {\n    currentPage++;\n    deleteMurkup();\n    createNewBooks();\n    removeDisableforElement(startButton);\n  }\n});\n// handler for start Button\nstartButton.addEventListener('click', () => {\n  currentPage = 1;\n  deleteMurkup();\n  createNewBooks();\n  addDisableforElement(startButton);\n  removeDisableforElement(endButton);\n});\n\n// handler for end Button\nendButton.addEventListener('click', () => {\n  currentPage = totalPages;\n  deleteMurkup();\n  createNewBooks();\n  addDisableforElement(endButton);\n  removeDisableforElement(startButton);\n});\n\n// this function delete markup shoping list before new render\nfunction deleteMurkup() {\n  divEl.innerHTML = \"\";\n}\n\n// this function slice array books and created new array books by next render\nfunction sliceArrayBooks() {\n  startIndex = (currentPage - 1) * pageSize;\n  endIndex = startIndex + pageSize;\n  return shoppingList.slice(startIndex, endIndex);\n};\n\nfunction createNewBooks() {\n  renderMarkUp(sliceArrayBooks());\n};\n\nfunction removeDisableforElement(element) {\n  element.disabled = false;\n};\n\nfunction addDisableforElement(element) {\n  element.disabled = true;\n};\n\nfunction activDisplayFlexOnElement(element) {\n  element.style.display = \"flex\";\n};\n\nexport function activDisplayNoneOnElement(element) {\n  element.style.display = \"none\";\n};\n"],"names":["$krGWQ","parcelRequire","paginationContainerPages","$c95b11ab0d026bd8$var$paginationContainerPages","paginationContainerBackBtn","$c95b11ab0d026bd8$var$paginationContainerBackBtn","paginationContainerEndBtn","$c95b11ab0d026bd8$var$paginationContainerEndBtn","startButton","$c95b11ab0d026bd8$var$startButton","previousButton","$c95b11ab0d026bd8$var$previousButton","nextButton","$c95b11ab0d026bd8$var$nextButton","endButton","$c95b11ab0d026bd8$var$endButton","default","$c95b11ab0d026bd8$var$shoppingList","JSON","parse","localStorage","getItem","$c95b11ab0d026bd8$var$totalPages","Math","ceil","length","$c95b11ab0d026bd8$var$currentPage","$c95b11ab0d026bd8$var$startIndex","$c95b11ab0d026bd8$var$endIndex","$e5c62ffd1c5d842f$export$165ecfa13381fa90","slice","i","pageNumber","button","document","createElement","classList","add","textContent","$c95b11ab0d026bd8$var$activDisplayFlexOnElement","addEventListener","console","log","$c95b11ab0d026bd8$var$deleteMurkup","$c95b11ab0d026bd8$var$createNewBooks","$c95b11ab0d026bd8$var$removeDisableforElement","appendChild","divEl","innerHTML","element","disabled","$c95b11ab0d026bd8$var$addDisableforElement","style","display","$c95b11ab0d026bd8$export$f9d7897908657a37","$e5c62ffd1c5d842f$var$divEl","$e5c62ffd1c5d842f$var$paginationContainerPages","$e5c62ffd1c5d842f$var$paginationContainerBackBtn","$e5c62ffd1c5d842f$var$paginationContainerEndBtn","array","map","title","author","description","list_name","join","$e5c62ffd1c5d842f$export$f4d4a70215cfc395","insertAdjacentHTML","querySelector","event","target","contains","dataBookName","getAttribute","bookIndex","findIndex","bookInStorage","splice","setItem","stringify"],"version":3,"file":"shopping-list.1d40514a.js.map"}