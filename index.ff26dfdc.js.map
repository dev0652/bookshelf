{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,gBCAAD,EAAAC,EAAA,S,6CAoBiCC,EAAgBC,MAAAC,KAAAC,U,UAAhBH,I,OAAAA,EAAfI,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IAEFC,E,2FAAeC,EAAAC,QAAMC,IAC3B,uD,cADIH,EAAMI,EAAAC,KAAJL,K,kBAGDA,G,gCAEPM,QAAQC,IAAGH,EAAAI,I,0DAP8Bf,MAAAC,KAAAC,U,CCpBzC,IAAMc,EAAoB,SAACC,GAWhC,MATkB,sDAE+DC,OAAhED,EAAKE,WAAW,kDACJD,OADoDD,EAAKG,IAAI,sCAE5DF,OADDD,EAAKI,MAAM,0CACEH,OAAZD,EAAKK,OAAO,gC,EFqCvCC,IAHuB,E,WAAAd,WAArBe,iBAGoBC,SAASC,cAAc,wB,SAE7BC,I,OAAAA,EAAfxB,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IAEKC,EAEAqB,EAEDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAMC,EACHC,EAIAC,EAQAC,EAGDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAMzB,EACH0B,EASFC,E,2FA9BWC,I,OAAbtC,EAAII,EAAAC,KAEJgB,EAAcH,SAASqB,cAAc,MAEtCjB,GAAa,EAAbC,GAAa,EAAbC,OAAagB,E,SAAbf,EAAiBzB,EAAIyC,OAAAC,Y,UAArBpB,GAAAI,EAAAD,EAAakB,QAAAC,KAAA,C,gBAgBhB,IAhBSjB,EAAND,EAAamB,OACVjB,EAAeV,SAASqB,cAAc,OAC/BO,UAAUC,IAAI,kBAGrBlB,EAAgBX,SAASqB,cAAc,OAC/BO,UAAUC,IAAI,uBAC5BnB,EAAaoB,YAAYnB,GACzBA,EAAcoB,UAAYtB,EAAQuB,UAGlC7B,EAAY2B,YAAYpB,IAElBE,EAAcZ,SAASqB,cAAc,OAC/BO,UAAUC,IAAI,cAErBhB,GAAU,EAAVC,GAAU,EAAVC,OAAUO,E,UAAVN,EAAcP,EAAQwB,MAAKV,OAAAC,cAA3BX,GAAAI,EAAAD,EAAUS,QAAAC,MAAVb,GAAU,EAAJrB,EAANyB,EAAUU,OACPT,EAAWlB,SAASqB,cAAc,OAC/BO,UAAUC,IAAI,aACvBX,EAASgB,UAAY3C,EAAiBC,GAGtCoB,EAAYkB,YAAYZ,GACxBR,EAAaoB,YAAYlB,G,mDAPtBE,GAAU,EAAVC,EAAU7B,EAAAI,G,4BAAVuB,GAAU,MAAVG,EAAUmB,QAAVnB,EAAUmB,S,sBAAVrB,EAAU,C,sBAAVC,E,iEAUCI,EAAWnB,SAASqB,cAAc,WAC/BO,UAAUC,IAAI,UACvBV,EAASS,UAAUC,IAAI,gBACvBV,EAASY,UAAY,WAErBrB,EAAaoB,YAAYX,G,QA/BtBf,GAAa,E,yEAAbC,GAAa,EAAbC,EAAapB,EAAAkD,G,4BAAbhC,GAAa,MAAbG,EAAa4B,QAAb5B,EAAa4B,S,sBAAb9B,EAAa,C,sBAAbC,E,gEAkCLR,EAAoBgC,YAAY3B,G,kDAEhCf,QAAQC,IAAGH,EAAAmD,I,8GA1CmB9D,MAAAC,KAAAC,U,aAAdyB,EAAc3B,MAAAC,KAAAC,U,CA8ClC6D,E","sources":["src/js/home-bs/home-bs.js","src/js/home-bs/fetchBooks.js","src/js/home-bs/markupBook.js"],"sourcesContent":["import getTopBooksArray from \"./fetchBooks\";\n// import fetchBooks from './fetchBooks.js';\nimport { createBookMarkup } from './markupBook.js';\n\n// const booksListFirstEl = document.querySelector('.books-list__first');\n// const booksListSecEl = document.querySelector('.books-list__second');\n// const booksListThirdEl = document.querySelector('.books-list__third');\n// const booksListFourthEl = document.querySelector('.books-list__fourth');\n\n// fetchBooks().then((data)=> {\n// data.map((category)=> {\n\n//    console.log(category)\n\n//    if(category.list_name === 'Combined Print and E-Book Fiction') {\n//    return booksListFirstEl.innerHTML += createBookMarkup(category.books); \n//    }\n    \n// else if(category.list_name === 'Combined Print and E-Book Nonfiction') {\n//     return booksListSecEl.innerHTML += createBookMarkup(category.books);\n// }\n\n// else if(category.list_name === 'Hardcover Fiction') {\n//     return booksListThirdEl.innerHTML += createBookMarkup(category.books);\n// }\n\n// else if(category.list_name === 'Hardcover Nonfiction') {\n//    return booksListFourthEl.innerHTML += createBookMarkup(category.books);\n// }\n\n// })\n// }).catch(err=> {\n//     console.log(err)\n// })\n\n\n// Vitalii code\n\nimport getRefs from '../refs';\n\nconst { allCategoriesBtn } = getRefs();\n\n\nconst categoryContainerEl = document.querySelector('.category-container');\n\nexport async function renderTopBooks() {\n    try {\n      const data = await getTopBooksArray();\n  \n      const categoryTop = document.createElement('ul');\n  \n      for (const element of data) {\n        const categoryItem = document.createElement('li');\n        categoryItem.classList.add('home-category');\n\n\n        const categoryTitel = document.createElement('h2');\n        categoryTitel.classList.add('home-category-title');\n        categoryItem.appendChild(categoryTitel);\n        categoryTitel.innerText = element.list_name;\n\n    \n        categoryTop.appendChild(categoryItem);\n  \n        const bestSellers = document.createElement('ul');\n        bestSellers.classList.add('books-list');\n\n        for (const book of element.books) {\n          const bestBook = document.createElement('li');\n          bestBook.classList.add('book-item');\n          bestBook.innerHTML = createBookMarkup(book);\n          \n\n          bestSellers.appendChild(bestBook);\n          categoryItem.appendChild(bestSellers);\n        }\n\n        const buttonEl = document.createElement('button');\n        buttonEl.classList.add('button');\n        buttonEl.classList.add('see-more-btn');\n        buttonEl.innerText = 'See more'\n\n        categoryItem.appendChild(buttonEl);\n      }\n  \n      categoryContainerEl.appendChild(categoryTop);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n  renderTopBooks()\n\n// fetchBooks()\n//  .then(data => {\n//    data.map(category => {\n      // console.log(category);\n\n//      if (category.list_name === 'Combined Print and E-Book Fiction') {\n//        return (booksListFirstEl.innerHTML += createBookMarkup(category.books));\n//      } else if (\n//        category.list_name === 'Combined Print and E-Book Nonfiction'\n//      ) {\n//        return (booksListSecEl.innerHTML += createBookMarkup(category.books));\n//      } else if (category.list_name === 'Hardcover Fiction') {\n//        return (booksListThirdEl.innerHTML += createBookMarkup(category.books));\n//      } else if (category.list_name === 'Hardcover Nonfiction') {\n//        return (booksListFourthEl.innerHTML += createBookMarkup(\n//          category.books\n//        ));\n//      }\n//    });\n//  })\n//  .catch(err => {\n//    console.log(err);\n//  });\n","import axios from 'axios';\n\n// export default function fetchBooks(name) {\n\n\n//       return axios.get(`https://books-backend.p.goit.global/books/top-books`)\n//       .then(response =>{\n      \n\n//         return response.data;\n        \n//       })\n//       .catch(err=> {\n//         console.log(err)\n//       })\n//     }\n  \n\n    // Vitalii Code\n    \n   export default async function getTopBooksArray() {\n      try {\n        const { data } = await axios.get(\n          'https://books-backend.p.goit.global/books/top-books'\n        );\n        return data;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    \n   \n","export  const createBookMarkup =  (book)=> {\n\n    const markup =   `\n       <li class=\"book-item\">\n       <img  src=\"${book.book_image}\"  loading=\"lazy\"  class=\"book-image\" data_id=${book._id}/>\n       <h3 class=\"book-title\">${book.title}</h3>\n       <p class=\"book-author\"> ${book.author}\n        </p>\n        </li>`\n       \n    \n   return markup;\n   \n   \n   }"],"names":["$bpxeT","parcelRequire","$8ebd65c7b51cadc7$var$_getTopBooksArray","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","$dIxxU","default","get","_ctx","sent","console","log","t0","$71b2a5163445dc17$export$fc330cc8afb2a391","book","concat","book_image","_id","title","author","$ed1c5cd83a4972f1$var$categoryContainerEl","allCategoriesBtn","document","querySelector","$ed1c5cd83a4972f1$var$_renderTopBooks","categoryTop","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","element","categoryItem","categoryTitel","bestSellers","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_iterator1","_step1","bestBook","buttonEl","$8ebd65c7b51cadc7$export$2e2bcd8739ae039","createElement","undefined","Symbol","iterator","next","done","value","classList","add","appendChild","innerText","list_name","books","innerHTML","return","t1","t2","$ed1c5cd83a4972f1$export$897fb17cde4e950b"],"version":3,"file":"index.ff26dfdc.js.map"}